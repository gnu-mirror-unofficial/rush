# This file is part of GNU Rush.
# Copyright (C) 2008-2019 Sergey Poznyakoff
#
# GNU Rush is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# GNU Rush is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Rush.  If not, see <http://www.gnu.org/licenses/>.

m4_version_prereq([2.52g])

dnl m4_run_rush([KW], [CMD],[EC],[STDOUT],[STDERR],...)
m4_define([m4_run_rush],[m4_ifval([$2],[dnl
echo "# $2"
echo "# $2" >&2
m4_ifset([RUSH_ENVIRON],[env RUSH_ENVIRON $RUSHDIR/])rush -C none -D$1 dnl
m4_if([$2],[interactive],[-i],[-c "$2"]) test.conf
echo "# $?"
$0([$1],m4_shiftn(5, $@))])])

dnl m4_fmt_out([CMD],[EC],[STDOUT],[STDERR],...)
m4_define([m4_fmt_out],[m4_ifval([$1],[dnl
# $1
$3[]dnl
# $2
$0(m4_shift(m4_shift3($@)))])])

dnl m4_fmt_err([CMD],[EC],[STDOUT],[STDERR],...)
m4_define([m4_fmt_err],[m4_ifval([$1],[dnl
# $1
$4[]dnl
$0(m4_shift(m4_shift3($@)))])])

dnl AT_RUSH_TEST([CONFIG],[KW], [CMD],[EC],[STDOUT],[STDERR])
m4_define([AT_RUSH_TEST],[
myvars
AT_CHECK_UNQUOTED([
cat > test.conf <<EOT
[$1]
EOT
m4_run_rush(m4_shift($@))
],
[0],
[m4_fmt_out(m4_shift2($@))],
[m4_fmt_err(m4_shift2($@))])])
#
AT_INIT

AT_TESTED([rush])

AT_BANNER([Conditionals])
m4_include([argc.at])
m4_include([command.at])
m4_include([match.at])
m4_include([matchprog.at])
m4_include([uid.at])
m4_include([gid.at])

AT_BANNER([Transformations])
m4_include([set.at])
m4_include([delete.at])
m4_include([transform.at])
m4_include([map.at])

AT_BANNER([Actions])
m4_include([umask.at])
m4_include([newgrp.at])
# FIXME: No way to test chroot & limits
m4_include([chdir.at])
m4_include([env.at])

AT_BANNER([Features])
m4_include([interactive.at])
m4_include([fallthrough.at])
dnl FIXME:
dnl m4_include([fork.at])
dnl m4_include([acct.at])
dnl m4_include([notification.at])
m4_include([error.at])
